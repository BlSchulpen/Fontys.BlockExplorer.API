// <auto-generated />
using System;
using Fontys.BlockExplorer.Data.PostgresDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fontys.BlockExplorer.API.Migrations
{
    [DbContext(typeof(PostgresDatabaseContext))]
    [Migration("20220908111721_initialDb")]
    partial class initialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Address", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.HasKey("Hash");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Block", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<int>("CoinType")
                        .HasColumnType("integer");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkType")
                        .HasColumnType("integer");

                    b.Property<string>("PreviousBlockHash")
                        .HasColumnType("text");

                    b.HasKey("Hash");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Transaction", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<string>("BlockHash")
                        .HasColumnType("text");

                    b.HasKey("Hash");

                    b.HasIndex("BlockHash");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Transfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressHash")
                        .HasColumnType("text");

                    b.Property<string>("TransactionHash")
                        .HasColumnType("text");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddressHash");

                    b.HasIndex("TransactionHash");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Transaction", b =>
                {
                    b.HasOne("Fontys.BlockExplorer.Domain.Models.Block", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BlockHash");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Transfer", b =>
                {
                    b.HasOne("Fontys.BlockExplorer.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressHash");

                    b.HasOne("Fontys.BlockExplorer.Domain.Models.Transaction", null)
                        .WithMany("Transfers")
                        .HasForeignKey("TransactionHash");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Block", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Fontys.BlockExplorer.Domain.Models.Transaction", b =>
                {
                    b.Navigation("Transfers");
                });
#pragma warning restore 612, 618
        }
    }
}
